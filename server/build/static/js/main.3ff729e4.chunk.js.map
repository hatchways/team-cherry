{"version":3,"sources":["themes/theme.js","components/SubmitButton.js","components/CustomTextField.js","utils/localStorage.js","pages/Signup.js","pages/Login.js","components/Mention.js","pages/Main.js","components/settings/SidePanel.js","components/settings/content-panels/TabPanel.js","components/settings/forms/FormButton.js","components/settings/settings-context.js","components/settings/forms/AddCompanyForm.js","components/settings/forms/UserCompany.js","components/settings/forms/CompanyForms.js","components/settings/forms/SubscriberEmailForm.js","components/settings/content-panels/CompanyContentPanel.js","components/settings/content-panels/SecurityContentPanel.js","components/settings/SettingsContent.js","pages/Settings.js","components/liked-mentions/MentionDialog.js","pages/LikedMentions.js","components/Header.js","utils/SearchContext.js","App.js","utils/authAxios.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","h1","fontWeight","h2","h3","palette","primary","light","main","dark","contrastText","secondary","background","default","useStyles","makeStyles","button","margin","spacing","backgroundColor","concat","color","root","borderRadius","SubmitButton","_ref","children","onClick","classes","react_default","a","createElement","Button","type","fullWidth","variant","className","& .MuiOutlinedInput-root","CustomTextField","name","label","id","onChange","error","helperText","TextField","required","getUser","JSON","parse","localStorage","getItem","storeUser","user","setItem","stringify","eraseUser","removeItem","redirectPath","path","getPath","erasePath","paper","marginTop","display","flexDirection","alignItems","form","width","mainContainer","border","boxShadow","Signup","props","loginSignup","location","pathname","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","emailErr","setEmailErr","_useState5","_useState6","emailErrMsg","setEmailErrMsg","_useState7","_useState8","company","setCompany","_useState9","_useState10","companyErr","setCompanyErr","_useState11","_useState12","password","setPassword","_useState13","_useState14","passwordErr","setPasswordErr","history","push","createAccount","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","validateEmail","abrupt","length","axios","post","sent","t0","console","stop","_x","apply","this","arguments","Container","component","maxWidth","Fragment","Typography","onSubmit","noValidate","components_CustomTextField","autoComplete","target","value","components_SubmitButton","test","Login","passwordErrMsg","setpasswordErrMsg","login","res","_history2","data","CssBaseline","CardInList","height","justifyContent","textAlign","marginBottom","CardInDialog","maxHeight","thumbnailDiv","marginLeft","dividerDiv","thumbnailImg","objectFit","contentDiv","paragraphInMentionsInList","overflow","textOverflow","WebkitLineClamp","WebkitBoxOrient","paragraphInMentionsInDialog","whiteSpace","fontColorForPlatform","header","likeIcon","position","right","bottom","sentiment","float","top","paddingLeft","Mention","useHistory","Grid","style","ButtonBase","disabled","inList","inLiked","toggleLikedDialog","currentUrlParams","URLSearchParams","window","search","platform","image","src","alt","noWrap","gutterBottom","title","popularity","react_moment_dist_default","format","date","summary","content","Tooltip","toFixed","aria-label","placement","SentimentVeryDissatisfied_default","SentimentSatisfiedAlt_default","SentimentSatisfied_default","IconButton","handleLikeToggle","liked","Favorite_default","fill","FavoriteBorder_default","RootGridContainer","& .MuiGrid-container","paddingTop","rightPart","SwitchSelector","leftPanelGrid","leftPanelList","platformItem","platformFont","platformListItemAvatar","marginRight","platformAvatar","instruction","mention","snackBarBackground","IOSSwitch","withStyles","padding","switchBase","&$checked","transform","common","white","& + $track","opacity","&$focusVisible $thumb","thumb","track","grey","transition","transitions","create","checked","focusVisible","objectWithoutProperties","Switch","assign","focusVisibleClassName","disableRipple","DialogTitle","disableTypography","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSnackBarClick","updatedMentions","toConsumableArray","state","mentions","newMentions","sortByState","sortByDate","sortByPopularity","setState","snackBarOpen","newMentionsPopupOpen","handleNewMentionsPopupClose","handleSingleMentionPopupClose","singleMentionPopupOpen","idAndPlatformForMentionDisplayedInDialog","mentionDisplayedInDialog","selectedPlatformsInURL","get","splitSelectedPlatforms","split","keywords","allPlatforms","switchStates","forEach","item","includes","socket","io","connect","query","platformSelected","hasMore","page","match","params","idAndPlatform","loadMoreMentions","debounce","bind","assertThisInitialized","toggleLike","platforms","emit","log","on","_this2","sort","b","Date","sortedMentions","set","toString","newlySelectedPlatform","index","indexOf","temp","splice","filteredMentions","filter","mentionId","toggledMentionIndex","findIndex","m","toggledMention","slice","objectSpread","_this3","container","xs","List","dense","map","key","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","handlePlatformToggle","Divider","direction","justify","dist_default","initialSelectedIndex","sortToggle","options","selectedBackgroundColor","selectedFontColor","fontColor","react_infinite_scroller_default","pageStart","loadMore","loader","LinearProgress","imageUrl","url","Snackbar","anchorOrigin","vertical","horizontal","open","message","ContentProps","Dialog","aria-labelledby","Main_DialogTitle","DialogContent","dividers","DialogActions","autoFocus","Component","sidePanel","sidePanelIcon","panelHeader","panelTabs","SettingsSidePanel","setTabIndex","currentTabIndex","logoutUser","_ref2","e","Settings_default","Tabs","orientation","indicatorColor","Tab","TabPanel","role","hidden","Box","FormButton","btn","settingsInitialState","companies","settingsReducer","action","payload","c","SettingsContext","createContext","AddCompanyForm","input","setInput","_useContext","useContext","dispatch","addCompanyToUser","companyName","_ref3","inputWrapper","formField","InputLabelProps","InputProps","endAdornment","forms_FormButton","UserCompany","removeCompanyFromUser","delete","CompanyForms","sm","formFieldContainer","fieldLabel","InputLabel","formsWrapper","forms_UserCompany","forms_AddCompanyForm","SubscriberEmailForm","subscriberEmail","updateSubscriberEmail","put","paddingRight","CompanyContentPanel","forms_CompanyForms","forms_SubscriberEmailForm","SecurityContentPanel","SettingsContent","Home_default","content_panels_TabPanel","content_panels_CompanyContentPanel","content_panels_SecurityContentPanel","Settings","_useReducer","useReducer","_useReducer2","context","useMemo","useEffect","_getCompanies","getCompanies","Provider","SidePanel","newValue","settings_SettingsContent","MentionDialog","handleClose","href","textDecoration","LikedMentions","dialogOpen","dialogMention","_getLikedMentions","getLikedMentions","_callee2","_context2","debouncedLoader","_callee3","_context3","MentionId","liked_mentions_MentionDialog","pageState","toggleDialog","redirectContainer","redirectText","redirectButton","fontColorForMentions","fontColorForCrawler","AppBar","LogoGrid","SearchBarGrid","SeacrhBarDiv","SearchIcon","NavIcons","Header","setKeywords","redirect","setRedirect","handleSearchBar","pathName","Toolbar","react_router_dom","to","react_debounce_input_lib","element","debounceTimeout","disableUnderline","Search_default","SearchTerm","React","App","setProtectedRoutes","setOpen","errorMessage","setErrorMessage","unhideProtectedRoutes","searchTerm","setSearchTerm","isAuthorized","unauth","interceptors","response","use","status","Promise","reject","AxiosInterceptor","stringError","ThemeProvider","react_router","exact","render","onClose","autoHideDuration","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ff729e4.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Roboto\"',\r\n    fontSize: 12,\r\n    h1: {\r\n      fontWeight: '900',\r\n      fontSize: '25px'\r\n    },\r\n    h2: {\r\n      fontWeight: '900',\r\n      fontSize: '15px'\r\n    },\r\n    h3: {\r\n      fontWeight: '900',\r\n      fontSize: '12px'\r\n    }\r\n  },\r\n  palette: {\r\n    primary: {\r\n      light: '#839bf4',\r\n      main: '#6582f2',\r\n      dark: '#465ba9',\r\n      contrastText: '#fff',\r\n      //could customize the h1 variant as well\r\n    },\r\n    secondary: {\r\n      main: '#fff',\r\n    },\r\n    background: {\r\n      default: \"#fafbff\",\r\n    }\r\n  },\r\n\r\n});\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: `${theme.palette.primary.main}`,\r\n    color: `${theme.palette.primary.contrastText}`,\r\n  },\r\n  root: {\r\n    borderRadius: '25px'\r\n  }\r\n}));\r\n\r\n\r\nconst SubmitButton = ({ children, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type='submit'\r\n      fullWidth\r\n      variant='contained'\r\n      color='primary'\r\n      className={`${classes.button}`}\r\n      classes={{\r\n        root: classes.root\r\n      }}\r\n      onClick={onClick}\r\n    >{children}</Button>\r\n\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: \"25px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst CustomTextField = ({\r\n  name,\r\n  label,\r\n  id,\r\n  type,\r\n  onChange,\r\n  error,\r\n  helperText,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TextField\r\n      classes={{\r\n        root: classes.root,\r\n      }}\r\n      name={`${name}`}\r\n      label={`${label}`}\r\n      id={`${id}`}\r\n      type={`${type}`}\r\n      required\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      fullWidth\r\n      onChange={onChange}\r\n      error={error}\r\n      helperText={helperText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n","export const getUser = () => {\r\n  return JSON.parse(localStorage.getItem('user'))\r\n}\r\n\r\nexport const storeUser = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user))\r\n}\r\n\r\nexport const eraseUser = () => {\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nexport const redirectPath = (path) => {\r\n  localStorage.setItem('redirect', JSON.stringify(path))\r\n}\r\n\r\nexport const getPath = () => {\r\n  return JSON.parse(localStorage.getItem('redirect'))\r\n}\r\n\r\nexport const erasePath = () => {\r\n  localStorage.removeItem('redirect')\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Typography,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core/\";\r\n\r\nimport SubmitButton from \"../components/SubmitButton\";\r\nimport CustomTextField from \"../components/CustomTextField\";\r\nimport axios from \"axios\";\r\nimport { getUser, redirectPath, erasePath } from \"../utils/localStorage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"50px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  mainContainer: {\r\n    border: \"1px solid white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 2px 4px 0 gray\",\r\n    backgroundColor: \"white\",\r\n    width: \"900px\",\r\n    marginTop: \"150px\",\r\n  },\r\n}));\r\n\r\nexport default function Signup(props) {\r\n  const classes = useStyles();\r\n  const loginSignup = props.location.pathname;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(false);\r\n  const [emailErrMsg, setEmailErrMsg] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [companyErr, setCompanyErr] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordErr, setPasswordErr] = useState(false);\r\n\r\n  //helps with persisted login status\r\n  if (getUser()) {\r\n    const { history } = props;\r\n    history.push(\"/main\");\r\n  }\r\n  const createAccount = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      setEmailErr(false);\r\n      setCompanyErr(false);\r\n      setPasswordErr(false);\r\n\r\n      //error handling here for fields\r\n      if (!validateEmail(email)) {\r\n        setEmailErr(true);\r\n        setEmailErrMsg(\"Please enter a valid email address\");\r\n        return;\r\n      }\r\n      if (company === \"\") {\r\n        setCompanyErr(true);\r\n        return;\r\n      }\r\n      if (password.length < 7) {\r\n        setPasswordErr(true);\r\n        return;\r\n      }\r\n\r\n      //if frontend validations pass, make server call here to create user\r\n      const res = await axios.post(\"api/users/register\", {\r\n        email: email,\r\n        password: password,\r\n        company: company,\r\n      });\r\n      if (res === \"That email already exists\") {\r\n        setEmailErr(true);\r\n        setEmailErrMsg(\"That email already exists\");\r\n        return;\r\n      }\r\n\r\n      const { history } = props;\r\n      history.push(\"/main\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Container\r\n        className={classes.mainContainer}\r\n        component=\"main\"\r\n        maxWidth=\"xs\"\r\n      >\r\n        <div className={classes.paper}>\r\n          {loginSignup === \"/signup\" ? (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\">Lets Get Started!</Typography>\r\n              <Typography>Create an account</Typography>\r\n            </React.Fragment>\r\n          ) : (\r\n              <React.Fragment>\r\n                <Typography variant=\"h1\">Welcome Back!</Typography>\r\n              </React.Fragment>\r\n            )}\r\n          <form className={classes.form} onSubmit={createAccount} noValidate>\r\n            <CustomTextField\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              error={emailErr}\r\n              helperText={emailErrMsg}\r\n              onChange={(event) => {\r\n                setEmail(event.target.value);\r\n              }}\r\n            />\r\n            {loginSignup === \"/signup\" ? (\r\n              <CustomTextField\r\n                name=\"CompanyName\"\r\n                label=\"Company Name\"\r\n                id=\"CompanyName\"\r\n                error={companyErr}\r\n                helperText={companyErr ? \"Please enter your company\" : \"\"}\r\n                onChange={(event) => {\r\n                  setCompany(event.target.value);\r\n                }}\r\n              />\r\n            ) : (\r\n                \"\"\r\n              )}\r\n            <CustomTextField\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n              error={passwordErr}\r\n              helperText={\r\n                passwordErr\r\n                  ? \"Please enter a password longer than 7 characters\"\r\n                  : \"\"\r\n              }\r\n            />\r\n            <SubmitButton>\r\n              {loginSignup === \"/signup\" ? \"Create\" : \"Log In\"}\r\n            </SubmitButton>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\\\"]+)*)|(\\\\\".+\\\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CssBaseline, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport SubmitButton from \"../components/SubmitButton\";\r\nimport CustomTextField from \"../components/CustomTextField\";\r\nimport axios from \"axios\";\r\nimport { storeUser, getUser, erasePath, getPath } from \"../utils/localStorage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  mainContainer: {\r\n    border: \"1px solid white\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 2px 4px 0 gray\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"100px\",\r\n    width: \"900px\",\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(false);\r\n  const [emailErrMsg, setEmailErrMsg] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordErr, setPasswordErr] = useState(false);\r\n  const [passwordErrMsg, setpasswordErrMsg] = useState(\"\");\r\n\r\n  //helps with persisted login status\r\n  if (getUser()) {\r\n    const { history } = props;\r\n    history.push(\"/main\");\r\n  }\r\n  const login = async (event) => {\r\n    //this could be for a redirect if there is already a user in localstorage\r\n    if (getUser()) {\r\n      const { history } = props;\r\n      history.push(\"/main\");\r\n    }\r\n    try {\r\n      event.preventDefault();\r\n      setEmailErr(false);\r\n      setPasswordErr(false);\r\n      if (!validateEmail(email)) {\r\n        setEmailErr(true);\r\n        setEmailErrMsg(\"Please enter a valid email\");\r\n      }\r\n      if (password.length < 7) {\r\n        setPasswordErr(true);\r\n        setpasswordErrMsg(\"Please enter a password with at least 7 characters\");\r\n      }\r\n      if (emailErr || passwordErr) return;\r\n      const res = await axios.post(\"api/users/login\", {\r\n        email: email,\r\n        password: password,\r\n      });\r\n      if (res === \"User doesn't exist\") {\r\n        setEmailErr(true);\r\n        setEmailErrMsg(\"User doesn't exist\");\r\n        return;\r\n      }\r\n      if (res === \"Password does not match\") {\r\n        setPasswordErr(true);\r\n        setpasswordErrMsg(\"Password does not match\");\r\n        return;\r\n      }\r\n      storeUser(res.data.user);\r\n      const path = getPath()\r\n      const { history } = props;\r\n      if (!path) {\r\n        history.push('/main');\r\n      }\r\n      else {\r\n        erasePath()\r\n        history.push(path);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container className={classes.mainContainer} component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <React.Fragment>\r\n          <Typography variant=\"h1\">Welcome Back!</Typography>\r\n        </React.Fragment>\r\n        <form className={classes.form} onSubmit={login} noValidate>\r\n          <CustomTextField\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            error={emailErr}\r\n            helperText={emailErr ? emailErrMsg : \"\"}\r\n            onChange={(event) => {\r\n              setEmail(event.target.value);\r\n            }}\r\n          />\r\n          <CustomTextField\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            error={passwordErr}\r\n            helperText={passwordErr ? passwordErrMsg : \"\"}\r\n            onChange={(event) => {\r\n              setPassword(event.target.value);\r\n            }}\r\n          />\r\n          <SubmitButton>Log In</SubmitButton>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction validateEmail(email) {\r\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\\\"]+)*)|(\\\\\".+\\\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Moment from \"react-moment\";\r\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\"; //ok\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\"; //sad\r\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\"; //happy\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport { Typography, IconButton, ButtonBase, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  CardInList: {\r\n    height: \"200px\",\r\n    width: \"100%\",\r\n    maxWidth: \"850px\",\r\n    borderRadius: \"5px\",\r\n    background: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  CardInDialog: {\r\n    height: \"auto\",\r\n    maxHeight: \"400px\",\r\n    width: \"100%\",\r\n    borderRadius: \"5px\",\r\n    background: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n  thumbnailDiv: {\r\n    width: \"25%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  dividerDiv: {\r\n    width: \"3%\",\r\n  },\r\n  thumbnailImg: {\r\n    objectFit: \"contain\",\r\n    maxHeight: \"75%\",\r\n    width: \"95%\",\r\n  },\r\n  contentDiv: {\r\n    marginTop: \"20px\",\r\n    width: \"69%\",\r\n  },\r\n  paragraphInMentionsInList: {\r\n    display: \"-webkit-box\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    WebkitLineClamp: 5,\r\n    WebkitBoxOrient: \"vertical\",\r\n  },\r\n  paragraphInMentionsInDialog: {\r\n    whiteSpace: \"pre-wrap\",\r\n    maxHeight: \"300px\",\r\n    height: \"auto\",\r\n  },\r\n  fontColorForPlatform: {\r\n    color: \"#D3D3D3\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  likeIcon: {\r\n    position: \"relative\",\r\n    height: \"25%\",\r\n    right: \"80px\",\r\n    bottom: \"12px\",\r\n  },\r\n  sentiment: {\r\n    float: \"left\",\r\n    top: 0,\r\n    width: \"100px\",\r\n    position: \"absolute\",\r\n    right: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingLeft: \"40px\",\r\n  },\r\n}));\r\n\r\nexport default function Mention(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  function sentimentAnalysis() {\r\n    if (props.sentiment < -0.05)\r\n      return (\r\n        <SentimentVeryDissatisfiedIcon\r\n          style={{ color: \"rgb(101, 130, 243)\" }}\r\n        />\r\n      );\r\n    if (props.sentiment > 0.05)\r\n      return (\r\n        <SentimentSatisfiedAltIcon style={{ color: \"rgb(101, 130, 243)\" }} />\r\n      );\r\n    return <SentimentSatisfiedIcon style={{ color: \"rgb(101, 130, 243)\" }} />;\r\n  }\r\n  return (\r\n    <Grid style={{ display: \"flex\" }}>\r\n      <ButtonBase\r\n        disabled={!props.inList}\r\n        className={props.inList ? classes.CardInList : classes.CardInDialog}\r\n        onClick={(event) => {\r\n          if (props.inLiked) {\r\n            props.toggleLikedDialog();\r\n          } else {\r\n            let currentUrlParams = new URLSearchParams(window.location.search);\r\n            history.push(\r\n              \"/main/mentions/\" +\r\n                props.id +\r\n                \"|\" +\r\n                props.platform +\r\n                \"?\" +\r\n                currentUrlParams\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        <div\r\n          className={props.inList ? classes.CardInList : classes.CardInDialog}\r\n        >\r\n          <div className={classes.thumbnailDiv}>\r\n            {props.image ? (\r\n              <img className={classes.thumbnailImg} src={props.image} alt=\"\" />\r\n            ) : (\r\n              <img\r\n                className={classes.thumbnailImg}\r\n                src={`/imgs/${props.platform}_icon.png`}\r\n                alt=\"\"\r\n              />\r\n            )}\r\n          </div>\r\n          <div className={classes.dividerDiv}></div>\r\n\r\n          <div className={classes.contentDiv}>\r\n            <div className={classes.header}>\r\n              <Typography noWrap gutterBottom variant=\"h5\" component=\"h2\">\r\n                {props.title}\r\n              </Typography>\r\n            </div>\r\n\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"subtitle1\"\r\n              component=\"small\"\r\n              className={classes.fontColorForPlatform}\r\n            >\r\n              {props.platform} | Popularity: {props.popularity} |{\" \"}\r\n              <Moment format=\"YYYY/MM/DD HH:mm\">{props.date}</Moment>\r\n            </Typography>\r\n\r\n            {props.inList ? (\r\n              props.summary ? (\r\n                <p className={classes.paragraphInMentionsInList}>\r\n                  {props.summary}\r\n                </p>\r\n              ) : (\r\n                <p className={classes.paragraphInMentionsInList}>\r\n                  {props.content}\r\n                </p>\r\n              )\r\n            ) : (\r\n              <p className={classes.paragraphInMentionsInDialog}>\r\n                {props.content}\r\n              </p>\r\n            )}\r\n            <div className={classes.sentiment}>\r\n              <Tooltip\r\n                title={`From a range between -1 to 1, we gave this post a sentiment score of ${\r\n                  props.sentiment ? props.sentiment.toFixed(2) : 0\r\n                }`}\r\n                aria-label=\"add\"\r\n                placement=\"top\"\r\n              >\r\n                {sentimentAnalysis()}\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ButtonBase>\r\n      <IconButton\r\n        className={classes.likeIcon}\r\n        onClick={() => props.handleLikeToggle(props.id)}\r\n      >\r\n        {props.inList ? (\r\n          props.liked ? (\r\n            <FavoriteIcon style={{ fill: \"red\" }} />\r\n          ) : (\r\n            <FavoriteBorderIcon />\r\n          )\r\n        ) : null}\r\n      </IconButton>\r\n    </Grid>\r\n  );\r\n}\r\n","import {\r\n  Avatar,\r\n  Divider,\r\n  Grid,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Switch,\r\n  Typography,\r\n  Snackbar,\r\n  Dialog,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core/\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport SwitchSelector from \"react-switch-selector\";\r\nimport io from \"socket.io-client\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nimport Mention from \"../components/Mention\";\r\n\r\nconst useStyles = (theme) => ({\r\n  RootGridContainer: {\r\n    \"& .MuiGrid-container\": {\r\n      paddingTop: \"50px\",\r\n    },\r\n  },\r\n  rightPart: {\r\n    marginTop: \"8em\",\r\n  },\r\n  SwitchSelector: {\r\n    height: \"2.8em\",\r\n    width: \"30%\",\r\n    fontWeight: 400,\r\n  },\r\n  leftPanelGrid: {\r\n    height: \"calc(100vh - 5.4em)\",\r\n    position: \"fixed\",\r\n    marginTop: \"5.4em\",\r\n  },\r\n  leftPanelList: {\r\n    background: \"white\",\r\n    width: \"100%\",\r\n  },\r\n  platformItem: {\r\n    height: \"6em\",\r\n  },\r\n  platformFont: {\r\n    fontWeight: 800,\r\n  },\r\n  platformListItemAvatar: {\r\n    marginRight: \"7px\",\r\n  },\r\n  platformAvatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  instruction: {\r\n    textAlign: \"center\",\r\n  },\r\n  mention: {\r\n    maxWidth: \"100%\",\r\n  },\r\n  snackBarBackground: {\r\n    background: theme.palette.primary.main,\r\n  },\r\n});\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 36,\r\n    height: 19,\r\n    padding: 0,\r\n    margin: theme.spacing(1),\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    \"&$checked\": {\r\n      transform: \"translateX(17px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        backgroundColor: \"#6583f2\",\r\n        opacity: 1,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    \"&$focusVisible $thumb\": {\r\n      color: \"#6583f2\",\r\n      border: \"6px solid #fff\",\r\n    },\r\n  },\r\n  thumb: {\r\n    width: 17,\r\n    height: 17,\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: \"#bdc7d4\",\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\r\n  },\r\n  checked: {},\r\n  focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\n// Variables for \"new mentions\" popup window.\r\nconst DialogTitle = withStyles(useStyles)((props) => {\r\n  const { children } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Get the params in the URL so we can know which platforms are selected.\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    let selectedPlatformsInURL = currentUrlParams.get(\"platforms\");\r\n    let splitSelectedPlatforms = [];\r\n    if (selectedPlatformsInURL) {\r\n      splitSelectedPlatforms = selectedPlatformsInURL.split(\",\");\r\n    }\r\n\r\n    let keywords = currentUrlParams.get(\"keywords\");\r\n    if (!keywords) {\r\n      keywords = \"\";\r\n    }\r\n    let sortByState = currentUrlParams.get(\"sortBy\");\r\n    if (!sortByState) {\r\n      sortByState = \"MostRecent\";\r\n    }\r\n\r\n    let allPlatforms = [\"Reddit\", \"Twitter\"];\r\n    let switchStates = [];\r\n    allPlatforms.forEach((item) => {\r\n      switchStates[item] = splitSelectedPlatforms.includes(item);\r\n    });\r\n\r\n    // Setup WebSocket\r\n    var socket = io.connect(\"https://mentioncrawler.herokuapp.com/\", {\r\n      query: {\r\n        keywords: keywords,\r\n        platformSelected: splitSelectedPlatforms,\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      allPlatforms: allPlatforms,\r\n      platformSelected: [...splitSelectedPlatforms],\r\n      keywords: keywords,\r\n      mentions: [],\r\n      hasMore: true || false,\r\n      page: 1,\r\n      newMentions: [],\r\n      switchStates: switchStates,\r\n      sortByState: sortByState,\r\n      socket: socket,\r\n      snackBarOpen: false,\r\n      newMentionsPopupOpen: false,\r\n      idAndPlatformForMentionDisplayedInDialog:\r\n        props.match.params.idAndPlatform,\r\n      singleMentionPopupOpen: false,\r\n      mentionDisplayedInDialog: null,\r\n    };\r\n\r\n    this.loadMoreMentions = debounce(500, this.loadMoreMentions.bind(this));\r\n    this.toggleLike = this.toggleLike.bind(this);\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    let keywords = currentUrlParams.get(\"keywords\");\r\n    if (!keywords) {\r\n      keywords = \"\";\r\n    }\r\n\r\n    if (this.state.keywords !== keywords) {\r\n      let { data } = await axios.get(\"/api/mentions\", {\r\n        params: {\r\n          platforms: this.state.platformSelected,\r\n          keywords: keywords,\r\n        },\r\n      });\r\n\r\n      if (this.state.sortByState === \"MostRecent\") {\r\n        this.sortByDate(data.mentions);\r\n      } else {\r\n        this.sortByPopularity(data.mentions);\r\n      }\r\n\r\n      this.setState({\r\n        mentions: data.mentions,\r\n        keywords: keywords,\r\n        page: 1,\r\n        hasMore: true,\r\n      });\r\n\r\n      this.state.socket.emit(\"setKeywords\", {\r\n        keywords: this.state.keywords,\r\n      });\r\n    }\r\n\r\n    if (this.props.match.params.idAndPlatform) {\r\n      if (\r\n        this.state.idAndPlatformForMentionDisplayedInDialog !==\r\n        this.props.match.params.idAndPlatform\r\n      ) {\r\n        console.log(\"if\");\r\n\r\n        let { data } = await axios.get(\r\n          \"/api/mentions/\" + this.props.match.params.idAndPlatform\r\n        );\r\n\r\n        if (data) {\r\n          this.setState({\r\n            mentionDisplayedInDialog: data.mention,\r\n            singleMentionPopupOpen: true,\r\n            idAndPlatformForMentionDisplayedInDialog: this.props.match.params\r\n              .idAndPlatform,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (this.state.idAndPlatformForMentionDisplayedInDialog) {\r\n        console.log(\"else\");\r\n        this.setState({\r\n          mentionDisplayedInDialog: null,\r\n          singleMentionPopupOpen: false,\r\n          idAndPlatformForMentionDisplayedInDialog: null,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = await axios.get(\"/api/mentions\", {\r\n      params: {\r\n        platforms: this.state.platformSelected,\r\n        keywords: this.state.keywords,\r\n        page: this.state.page,\r\n      },\r\n    });\r\n\r\n    if (this.state.sortByState === \"MostRecent\") {\r\n      this.sortByDate(res.data.mentions);\r\n    } else {\r\n      this.sortByPopularity(res.data.mentions);\r\n    }\r\n\r\n    this.setState({\r\n      mentions: res.data.mentions,\r\n    });\r\n\r\n    this.state.socket.on(\"newMentions\", (data) => {\r\n      this.setState({\r\n        newMentions: [...data, ...this.state.newMentions],\r\n      });\r\n\r\n      if (!this.state.newMentionsPopupOpen) {\r\n        this.setState({\r\n          snackBarOpen: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    if (this.state.idAndPlatformForMentionDisplayedInDialog) {\r\n      let { data } = await axios.get(\r\n        \"/api/mentions/\" + this.state.idAndPlatformForMentionDisplayedInDialog\r\n      );\r\n      if (data) {\r\n        await this.setState({\r\n          mentionDisplayedInDialog: data.mention,\r\n          singleMentionPopupOpen: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  sortByPopularity(mentions) {\r\n    mentions.sort((a, b) => {\r\n      return b.popularity - a.popularity;\r\n    });\r\n  }\r\n\r\n  sortByDate(mentions) {\r\n    mentions.sort((a, b) => {\r\n      if (new Date(b.date) > new Date(a.date)) {\r\n        return 1;\r\n      } else {\r\n        return -1;\r\n      }\r\n    });\r\n  }\r\n\r\n  sortToggle(value) {\r\n    let sortedMentions = this.state.mentions;\r\n    if (value === \"MostRecent\") {\r\n      this.sortByDate(sortedMentions);\r\n    } else {\r\n      this.sortByPopularity(sortedMentions);\r\n    }\r\n    this.setState({\r\n      mentions: sortedMentions,\r\n    });\r\n\r\n    this.setState({\r\n      sortByState: value,\r\n    });\r\n\r\n    let currentUrlParams = new URLSearchParams(this.props.location.search);\r\n    currentUrlParams.set(\"sortBy\", value);\r\n    this.props.history.push({\r\n      search: currentUrlParams.toString(),\r\n    });\r\n  }\r\n\r\n  async handlePlatformToggle(value) {\r\n    let newlySelectedPlatform = value.target.name;\r\n    let checked = value.target.checked;\r\n    this.state.switchStates[newlySelectedPlatform] = checked;\r\n\r\n    if (checked) {\r\n      await this.setState({\r\n        platformSelected: [\r\n          ...this.state.platformSelected,\r\n          newlySelectedPlatform,\r\n        ],\r\n      });\r\n\r\n      let { data } = await axios.get(\"/api/mentions/\", {\r\n        params: {\r\n          platforms: this.state.platformSelected,\r\n          keywords: this.state.keywords,\r\n        },\r\n      });\r\n\r\n      const newMentions = data.mentions;\r\n\r\n      if (this.state.sortByState === \"MostRecent\") {\r\n        this.sortByDate(newMentions);\r\n      } else {\r\n        this.sortByPopularity(newMentions);\r\n      }\r\n\r\n      await this.setState({\r\n        mentions: newMentions,\r\n        hasMore: true,\r\n        page: 1,\r\n      });\r\n    } else {\r\n      let index = this.state.platformSelected.indexOf(newlySelectedPlatform);\r\n      let temp = this.state.platformSelected;\r\n      if (index !== -1) {\r\n        temp.splice(index, 1);\r\n      }\r\n      await this.setState({\r\n        platformSelected: temp,\r\n      });\r\n\r\n      let filteredMentions = this.state.mentions.filter(\r\n        (mention) => mention.platform !== newlySelectedPlatform\r\n      );\r\n\r\n      await this.setState({\r\n        mentions: filteredMentions,\r\n      });\r\n    }\r\n\r\n    // Add the selected platforms in to the query params.\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    currentUrlParams.set(\"platforms\", this.state.platformSelected);\r\n    this.props.history.push(\r\n      window.location.pathname + \"?\" + currentUrlParams.toString()\r\n    );\r\n\r\n    this.state.socket.emit(\"setPlatformSelected\", {\r\n      platformSelected: this.state.platformSelected,\r\n    });\r\n  }\r\n\r\n  async loadMoreMentions() {\r\n    let res = await axios.get(\"/api/mentions\", {\r\n      params: {\r\n        platforms: this.state.platformSelected,\r\n        keywords: this.state.keywords,\r\n        page: this.state.page + 1,\r\n      },\r\n    });\r\n\r\n    const { hasMore, page, mentions } = res.data;\r\n    if (hasMore) {\r\n      const updatedMentions = [...this.state.mentions, ...mentions];\r\n\r\n      if (this.state.sortByState == \"MostRecent\") {\r\n        this.sortByDate(updatedMentions);\r\n      } else {\r\n        this.sortByPopularity(updatedMentions);\r\n      }\r\n\r\n      this.setState({\r\n        hasMore,\r\n        page,\r\n        mentions: updatedMentions,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        hasMore: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSnackBarClick = (event) => {\r\n    let updatedMentions = [...this.state.mentions, ...this.state.newMentions];\r\n\r\n    if (this.state.sortByState === \"MostRecent\") {\r\n      this.sortByDate(updatedMentions);\r\n    } else {\r\n      this.sortByPopularity(updatedMentions);\r\n    }\r\n\r\n    this.setState({\r\n      snackBarOpen: false,\r\n      newMentionsPopupOpen: true,\r\n      mentions: updatedMentions,\r\n    });\r\n  };\r\n\r\n  handleNewMentionsPopupClose = () => {\r\n    this.setState({\r\n      newMentionsPopupOpen: false,\r\n      newMentions: [],\r\n    });\r\n  };\r\n\r\n  handleSingleMentionPopupClose = () => {\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    this.props.history.push(\"/main\" + \"?\" + currentUrlParams);\r\n\r\n    this.setState({\r\n      singleMentionPopupOpen: false,\r\n      idAndPlatformForMentionDisplayedInDialog: null,\r\n      mentionDisplayedInDialog: null,\r\n    });\r\n  };\r\n\r\n  async toggleLike(mentionId) {\r\n    const res = await axios.post(`/api/users/mentions/${mentionId}/like`);\r\n    const { mention } = res.data;\r\n\r\n    const toggledMentionIndex = this.state.mentions.findIndex(\r\n      (m) => m.id === mentionId\r\n    );\r\n    const toggledMention = this.state.mentions[toggledMentionIndex];\r\n\r\n    this.setState({\r\n      mentions: [\r\n        ...this.state.mentions.slice(0, toggledMentionIndex),\r\n        { ...toggledMention, liked: !toggledMention.liked },\r\n        ...this.state.mentions.slice(toggledMentionIndex + 1),\r\n      ],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={3} container className={classes.leftPanelGrid}>\r\n            <List dense className={classes.leftPanelList}>\r\n              {this.state.allPlatforms.map((platform) => {\r\n                return (\r\n                  <div key={platform}>\r\n                    <ListItem className={classes.platformItem}>\r\n                      <ListItemAvatar\r\n                        className={classes.platformListItemAvatar}\r\n                      >\r\n                        {\" \"}\r\n                        <Avatar\r\n                          className={classes.platformAvatar}\r\n                          src={`/imgs/${platform}_icon.png`}\r\n                        />\r\n                      </ListItemAvatar>\r\n\r\n                      <ListItemText\r\n                        disableTypography\r\n                        primary={\r\n                          <Typography className={classes.platformFont}>\r\n                            {platform}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n\r\n                      <ListItemSecondaryAction>\r\n                        <IOSSwitch\r\n                          name={platform}\r\n                          checked={this.state.switchStates[platform]}\r\n                          onClick={(event) => {\r\n                            this.handlePlatformToggle(event);\r\n                          }}\r\n                        />\r\n                      </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" light />\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}></Grid>\r\n\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            className={classes.rightPart}\r\n            container\r\n            direction={\"column\"}\r\n            spacing={2}\r\n          >\r\n            {\" \"}\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <h1>My mentions</h1>\r\n              <div className={classes.SwitchSelector}>\r\n                <SwitchSelector\r\n                  initialSelectedIndex={\r\n                    !this.state.sortByState ||\r\n                      this.state.sortByState === \"MostRecent\"\r\n                      ? 0\r\n                      : 1\r\n                  }\r\n                  onChange={(value) => {\r\n                    this.sortToggle(value);\r\n                  }}\r\n                  options={[\r\n                    {\r\n                      label: \"Most recent\",\r\n                      value: \"MostRecent\",\r\n                      selectedBackgroundColor: \"#6583f2\",\r\n                      selectedFontColor: \"white\",\r\n                    },\r\n                    {\r\n                      label: \"Most popular\",\r\n                      value: \"MostPopular\",\r\n                      selectedBackgroundColor: \"#6583f2\",\r\n                      selectedFontColor: \"white\",\r\n                    },\r\n                  ]}\r\n                  backgroundColor={\"#eaeefd\"}\r\n                  fontColor={\"#6583f2\"}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            {this.state.mentions.length === 0 ? (\r\n              <h3 className={classes.instruction}>\r\n                Please enter a company name in the search bar, and toggle one or\r\n                more platforms in the left panel.\r\n              </h3>\r\n            ) : (\r\n                <InfiniteScroll\r\n                  pageStart={0}\r\n                  loadMore={this.loadMoreMentions}\r\n                  hasMore={this.state.hasMore}\r\n                  loader={<LinearProgress key={0} />}\r\n                >\r\n                  {this.state.mentions.map((mention, index) => {\r\n                    return (\r\n                      <Grid item key={index} className={classes.mention}>\r\n                        <Mention\r\n                          inList={true}\r\n                          handleLikeToggle={this.toggleLike}\r\n                          liked={mention.liked}\r\n                          id={mention.id}\r\n                          image={mention.imageUrl}\r\n                          title={mention.title}\r\n                          platform={mention.platform}\r\n                          content={mention.content}\r\n                          popularity={mention.popularity}\r\n                          date={mention.date}\r\n                          url={mention.url}\r\n                          summary={mention.summary}\r\n                          sentiment={mention.sentiment}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                </InfiniteScroll>\r\n              )}\r\n            <Snackbar\r\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n              open={this.state.snackBarOpen}\r\n              message=\"New mentions arrived. Click to view. \"\r\n              onClick={this.handleSnackBarClick}\r\n              ContentProps={{\r\n                classes: {\r\n                  root: classes.snackBarBackground,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.newMentionsPopupOpen}\r\n          maxWidth={\"md\"}\r\n          fullWidth={true}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\">\r\n            Newly posted mentions\r\n          </DialogTitle>\r\n\r\n          <MuiDialogContent dividers>\r\n            {this.state.newMentions.map((mention, index) => {\r\n              return (\r\n                <Grid item key={index} className={classes.mention}>\r\n                  <Mention\r\n                    inList={true}\r\n                    handleLikeToggle={this.toggleLike}\r\n                    liked={mention.liked}\r\n                    id={mention.id}\r\n                    image={mention.imageUrl}\r\n                    title={mention.title}\r\n                    platform={mention.platform}\r\n                    content={mention.content}\r\n                    popularity={mention.popularity}\r\n                    date={mention.date}\r\n                    url={mention.url}\r\n                    summary={mention.summary}\r\n                    sentiment={mention.sentiment}\r\n                  />\r\n                  {index === this.state.newMentions.length - 1 ? null : (\r\n                    <Divider />\r\n                  )}\r\n                </Grid>\r\n              );\r\n            })}\r\n          </MuiDialogContent>\r\n\r\n          <MuiDialogActions>\r\n            <Button\r\n              autoFocus\r\n              onClick={this.handleNewMentionsPopupClose}\r\n              color=\"primary\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </MuiDialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.singleMentionPopupOpen}\r\n          maxWidth={\"md\"}\r\n          fullWidth={true}\r\n        >\r\n          <MuiDialogContent>\r\n            {this.state.mentionDisplayedInDialog ? (\r\n              <Mention\r\n                inList={false}\r\n                handleLikeToggle={this.toggleLike}\r\n                id={this.state.mentionDisplayedInDialog.id}\r\n                liked={this.state.mentionDisplayedInDialog.liked}\r\n                image={this.state.mentionDisplayedInDialog.imageUrl}\r\n                title={this.state.mentionDisplayedInDialog.title}\r\n                platform={this.state.mentionDisplayedInDialog.platform}\r\n                content={this.state.mentionDisplayedInDialog.content}\r\n                popularity={this.state.mentionDisplayedInDialog.popularity}\r\n                date={this.state.mentionDisplayedInDialog.date}\r\n                url={this.state.mentionDisplayedInDialog.url}\r\n                summary={this.state.mentionDisplayedInDialog.summary}\r\n                sentiment={this.state.mentionDisplayedInDialog.sentiment}\r\n              />\r\n            ) : null}\r\n          </MuiDialogContent>\r\n\r\n          <Divider style={{ marginTop: \"20px\" }}></Divider>\r\n\r\n          <MuiDialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                window.open(this.state.mentionDisplayedInDialog.url);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Original Post\r\n            </Button>\r\n            <Button\r\n              onClick={this.handleSingleMentionPopupClose}\r\n              color=\"primary\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </MuiDialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Main);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Grid, makeStyles, Tab, Tabs } from \"@material-ui/core\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { eraseUser } from \"../../utils/localStorage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidePanel: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: \"3%\",\r\n  },\r\n  sidePanelIcon: {\r\n    marginTop: \".6em\",\r\n    marginLeft: \".2em\",\r\n  },\r\n  panelHeader: {\r\n    marginLeft: \"40%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  panelTabs: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst SettingsSidePanel = ({ setTabIndex, currentTabIndex }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const logoutUser = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\"api/users/logout\");\r\n    eraseUser();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={3} container className={classes.sidePanel}>\r\n      <Grid item className={classes.panelHeader}>\r\n        <h1>Settings</h1>\r\n        <SettingsIcon\r\n          color=\"primary\"\r\n          fontSize=\"large\"\r\n          className={classes.sidePanelIcon}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          indicatorColor=\"primary\"\r\n          value={currentTabIndex}\r\n          onChange={setTabIndex}\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Company\" />\r\n          <Tab label=\"Security\" />\r\n          <Tab onClick={logoutUser} label=\"Logout\" />\r\n        </Tabs>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsSidePanel;\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst TabPanel = ({ children, currentTabIndex, index, props }) => {\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={currentTabIndex !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n    >\r\n      {currentTabIndex === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabPanel;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst FormButton = ({ classes, label, onClick, color }) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={color}\r\n      className={classes.btn}\r\n      onClick={onClick}\r\n    >\r\n      {label}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { createContext } from \"react\";\r\n\r\nexport const settingsInitialState = {\r\n  companies: [],\r\n};\r\n\r\nexport const settingsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"get_companies\":\r\n      return { ...state, companies: action.payload };\r\n    case \"add_company\":\r\n      return { ...state, companies: [...state.companies, action.payload] };\r\n    case \"remove_company\":\r\n      return {\r\n        ...state,\r\n        companies: state.companies.filter((c) => c.name !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const SettingsContext = createContext(settingsInitialState);\r\n","import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\n\r\nimport FormButton from \"./FormButton\";\r\nimport { SettingsContext } from \"../settings-context\";\r\n\r\nconst AddCompanyForm = ({ classes }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const { state, dispatch } = useContext(SettingsContext);\r\n\r\n  const addCompanyToUser = async (companyName) => {\r\n    if (!state.companies.map((c) => c.name).includes(companyName)) {\r\n      const { data } = await axios.post(\"/api/company\", { companyName });\r\n      dispatch({ type: \"add_company\", payload: data });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.inputWrapper}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.formField}\r\n        label=\"Company Name\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        InputLabelProps={{\r\n          style: {\r\n            fontWeight: \"bold\",\r\n          },\r\n        }}\r\n        InputProps={{\r\n          style: {\r\n            fontWeight: \"bold\",\r\n          },\r\n          endAdornment: (\r\n            <FormButton\r\n              label=\"Add\"\r\n              onClick={() => {\r\n                addCompanyToUser(input);\r\n                setInput(\"\");\r\n              }}\r\n              color=\"primary\"\r\n              classes={classes}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddCompanyForm;\r\n","import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport { SettingsContext } from \"../settings-context\";\r\nimport FormButton from \"./FormButton\";\r\n\r\nconst UserCompany = ({ classes, name }) => {\r\n  const { dispatch } = useContext(SettingsContext);\r\n\r\n  const removeCompanyFromUser = async (companyName) => {\r\n    await axios.delete(\"/api/company\", { data: { name: companyName } });\r\n    dispatch({ type: \"remove_company\", payload: companyName });\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.inputWrapper}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        className={classes.formField}\r\n        value={name}\r\n        disabled={true}\r\n        InputProps={{\r\n          style: {\r\n            fontWeight: \"bold\",\r\n          },\r\n          endAdornment: (\r\n            <FormButton\r\n              label=\"Remove\"\r\n              color=\"secondary\"\r\n              onClick={() => removeCompanyFromUser(name)}\r\n              classes={classes}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserCompany;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, InputLabel } from \"@material-ui/core\";\r\n\r\nimport AddCompanyForm from \"./AddCompanyForm\";\r\nimport UserCompany from \"./UserCompany\";\r\nimport { SettingsContext } from \"../settings-context\";\r\n\r\nconst CompanyForms = ({ classes }) => {\r\n  const { state } = useContext(SettingsContext);\r\n  return (\r\n    <Grid item sm={12} className={classes.formFieldContainer}>\r\n      <Grid className={classes.fieldLabel}>\r\n        <InputLabel>\r\n          <h2>Your Companies</h2>\r\n        </InputLabel>\r\n      </Grid>\r\n      <Grid className={classes.formsWrapper}>\r\n        {state.companies.map((company) => (\r\n          <UserCompany classes={classes} name={company.name} key={company.id} />\r\n        ))}\r\n        <AddCompanyForm classes={classes} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CompanyForms;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Grid, InputLabel, TextField } from \"@material-ui/core\";\r\n\r\nimport FormButton from \"../forms/FormButton\";\r\nimport { getUser, storeUser } from \"../../../utils/localStorage\";\r\n\r\nconst SubscriberEmailForm = ({ classes }) => {\r\n  const [user, setUser] = useState(getUser());\r\n  const [input, setInput] = useState(user.subscriberEmail);\r\n\r\n  const updateSubscriberEmail = async (email) => {\r\n    await axios.put(\"/api/users/subscribe-mail/update\", {\r\n      subscriberEmail: email,\r\n    });\r\n    // update user object on client\r\n    storeUser({ ...user, subscriberEmail: email });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item sm={12} className={classes.formFieldContainer}>\r\n        <Grid className={classes.fieldLabel}>\r\n          <InputLabel>\r\n            <h2>Weekly Report</h2>\r\n          </InputLabel>\r\n        </Grid>\r\n        <Grid className={classes.formsWrapper}>\r\n          <Grid className={classes.inputWrapper}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.formField}\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              InputProps={{ style: { fontWeight: \"bold\" } }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <FormButton\r\n        classes={classes}\r\n        label=\"Save\"\r\n        color=\"primary\"\r\n        onClick={() => updateSubscriberEmail(input)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubscriberEmailForm;\r\n","//TODO This file is getting huge... need to refacting into smaller pieces\r\n\r\nimport React from \"react\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport CompanyForms from \"../forms/CompanyForms\";\r\nimport SubscriberEmailForm from \"../forms/SubscriberEmailForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingRight: \"10%\",\r\n  },\r\n  fieldLabel: {\r\n    width: \"15%\",\r\n  },\r\n  formsWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"70%\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  formFieldContainer: {\r\n    display: \"flex\",\r\n    marginBottom: \"40px\",\r\n  },\r\n  formField: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: \"25px\",\r\n    },\r\n    marginLeft: \"10px\",\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  btn: {\r\n    width: \"12%\",\r\n    borderRadius: \"25px\",\r\n  },\r\n}));\r\n\r\nconst CompanyContentPanel = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item container sm={12} className={classes.container}>\r\n      <CompanyForms classes={classes} />\r\n      <SubscriberEmailForm classes={classes} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CompanyContentPanel;\r\n","import React from \"react\";\r\n\r\nconst SecurityContentPanel = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>This is a security Panel</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecurityContentPanel;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Grid, Button, Typography, makeStyles } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport TabPanel from \"./content-panels/TabPanel\";\r\nimport CompanyContentPanel from \"./content-panels/CompanyContentPanel\";\r\nimport SecurityContentPanel from \"./content-panels/SecurityContentPanel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    padding: \"3%\",\r\n    // backgroundColor: \"#d3f5f5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nconst SettingsContent = ({ currentTabIndex }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <Grid item container xs={9} className={classes.content}>\r\n      <Grid sm={1} style={{ whiteSpace: \"nowrap\" }}>\r\n        <Button onClick={() => history.push(\"/main\")}>\r\n          <HomeIcon />\r\n          <Typography>Go Back</Typography>\r\n        </Button>\r\n      </Grid>\r\n      <TabPanel currentTabIndex={currentTabIndex} index={0}>\r\n        <CompanyContentPanel />\r\n      </TabPanel>\r\n      <TabPanel currentTabIndex={currentTabIndex} index={1}>\r\n        <SecurityContentPanel />\r\n      </TabPanel>\r\n      <TabPanel currentTabIndex={currentTabIndex} index={2}>\r\n        <h1>You are logging off..</h1>\r\n      </TabPanel>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsContent;\r\n","import React, { useState, useEffect, useReducer, useMemo } from \"react\";\r\nimport { makeStyles, Grid } from \"@material-ui/core\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport SidePanel from \"../components/settings/SidePanel\";\r\nimport SettingsContent from \"../components/settings/SettingsContent\";\r\n\r\nimport {\r\n  SettingsContext,\r\n  settingsReducer,\r\n  settingsInitialState,\r\n} from \"../components/settings/settings-context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    height: \"100%\",\r\n    marginTop: \"3%\",\r\n  },\r\n}));\r\n\r\nconst Settings = (props) => {\r\n  const classes = useStyles();\r\n  const [currentTabIndex, setTabIndex] = useState(0);\r\n\r\n  const [state, dispatch] = useReducer(settingsReducer, settingsInitialState);\r\n  const context = useMemo(() => {\r\n    return { state, dispatch };\r\n  }, [state, dispatch]);\r\n\r\n  // api fetch\r\n  useEffect(() => {\r\n    async function getCompanies() {\r\n      const res = await axios.get(\"/api/company\");\r\n      dispatch({ type: \"get_companies\", payload: res.data.companies });\r\n    }\r\n    getCompanies();\r\n  }, []);\r\n\r\n  const onChangeTabs = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={context}>\r\n      <Grid container className={classes.container}>\r\n        <SidePanel\r\n          setTabIndex={onChangeTabs}\r\n          currentTabIndex={currentTabIndex}\r\n        />\r\n        <SettingsContent currentTabIndex={currentTabIndex} />\r\n      </Grid>\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Mention from \"../Mention\";\r\n\r\nconst MentionDialog = ({ open, handleClose, mention, toggleLike }) => {\r\n  return (\r\n    <Dialog open={open} maxWidth=\"md\" fullWidth={true}>\r\n      <DialogContent>\r\n        <Mention\r\n          inList={false}\r\n          id={mention.id}\r\n          handleLikeToggle={toggleLike}\r\n          liked={true}\r\n          image={mention.imageUrl}\r\n          title={mention.title}\r\n          platform={mention.platform}\r\n          content={mention.content}\r\n          popularity={mention.popularity}\r\n          date={mention.date}\r\n        />\r\n      </DialogContent>\r\n\r\n      <Divider></Divider>\r\n\r\n      <DialogActions>\r\n        <a href={`${mention.url}`} style={{ textDecoration: \"none\" }}>\r\n          <Button>Original Post</Button>\r\n        </a>\r\n        <Button onClick={() => handleClose()}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MentionDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nimport Mention from \"../components/Mention\";\r\nimport MentionDialog from \"../components/liked-mentions/MentionDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    marginTop: \"3%\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst LikedMentions = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    mentions: [],\r\n    page: 0,\r\n    hasMore: true,\r\n    dialogOpen: false,\r\n    dialogMention: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function getLikedMentions() {\r\n      const res = await axios.get(\"/api/users/mentions/liked\", {\r\n        params: { page: state.page },\r\n      });\r\n      setState({ ...state, mentions: res.data.mentions, page: state.page + 1 });\r\n    }\r\n    getLikedMentions();\r\n  }, []);\r\n\r\n  const loadMore = async () => {\r\n    let res = await axios.get(\"/api/users/mentions/liked\", {\r\n      params: { page: state.page },\r\n    });\r\n\r\n    setState({\r\n      ...state,\r\n      mentions: [...state.mentions, ...res.data.mentions],\r\n      page: state.page + 1,\r\n      hasMore: res.data.hasMore,\r\n    });\r\n  };\r\n\r\n  const debouncedLoader = debounce(250, loadMore);\r\n\r\n  const toggleLike = async (mentionId) => {\r\n    const res = await axios.post(`/api/users/mentions/${mentionId}/like`);\r\n    const { mention } = res.data;\r\n    if (!mention.liked) {\r\n      setState({\r\n        ...state,\r\n        mentions: state.mentions.filter((m) => m.MentionId !== mentionId),\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleDialog = (mention) => {\r\n    setState({ ...state, dialogOpen: true, dialogMention: mention });\r\n  };\r\n\r\n  const dialogClose = () => {\r\n    setState({ ...state, dialogOpen: false, dialogMention: {} });\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.container}>\r\n      <h1 style={{ textAlign: \"center\" }}>Your Liked Mentions</h1>\r\n      <MentionDialog\r\n        open={state.dialogOpen}\r\n        handleClose={dialogClose}\r\n        mention={state.dialogMention}\r\n        toggleLike={toggleLike}\r\n      />\r\n      <InfiniteScroll\r\n        pageState={state.page}\r\n        loadMore={debouncedLoader}\r\n        hasMore={state.hasMore}\r\n        loader={<LinearProgress key={0} />}\r\n      >\r\n        {state.mentions.map((m) => {\r\n          const mention = m.Mention;\r\n          return (\r\n            <Mention\r\n              inLiked\r\n              toggleLikedDialog={() => toggleDialog(mention)}\r\n              inList={true}\r\n              key={mention.id}\r\n              handleLikeToggle={toggleLike}\r\n              liked={true}\r\n              id={mention.id}\r\n              image={mention.imageUrl}\r\n              title={mention.title}\r\n              platform={mention.platform}\r\n              content={mention.content}\r\n              popularity={mention.popularity}\r\n              date={mention.date}\r\n            />\r\n          );\r\n        })}\r\n      </InfiniteScroll>{\" \"}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LikedMentions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n  Container,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport TextField from \"@material-ui/core/Input\";\r\nimport { getUser } from \"../utils/localStorage\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  redirectContainer: {\r\n    display: \"flex\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  redirectText: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginRight: \"20px\",\r\n  },\r\n  redirectButton: {\r\n    borderRadius: \"25px\",\r\n  },\r\n  fontColorForMentions: {\r\n    color: \"white\",\r\n  },\r\n  fontColorForCrawler: {\r\n    color: \"#191970\",\r\n  },\r\n  AppBar: {\r\n    height: \"5.4em\",\r\n    boxShadow: \"none\",\r\n  },\r\n  LogoGrid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  SearchBarGrid: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  SeacrhBarDiv: {\r\n    borderRadius: 50,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    width: \"100%\",\r\n    height: \"2.5em\",\r\n  },\r\n  TextField: {\r\n    width: \"100%\",\r\n  },\r\n  SearchIcon: {\r\n    color: \"black\",\r\n  },\r\n  NavIcons: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  spacing: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [keywords, setKeywords] = useState(\"\");\r\n  const [redirect, setRedirect] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    let keywords = currentUrlParams.get(\"keywords\");\r\n    if (!keywords) {\r\n      keywords = \"\"\r\n    }\r\n    setKeywords(keywords);\r\n  }, []);\r\n\r\n  const handleSearchBar = async (event) => {\r\n    // Set keywords into URL params.\r\n    let currentUrlParams = new URLSearchParams(window.location.search);\r\n    currentUrlParams.set(\"keywords\", event.target.value);\r\n    history.push(window.location.pathname + \"?\" + currentUrlParams.toString());\r\n  };\r\n  let pathName = window.location.pathname;\r\n  useEffect(() => {\r\n    if (pathName != \"/login\") {\r\n      setRedirect(\"Log In\");\r\n    } else {\r\n      setRedirect(\"Sign Up\");\r\n    }\r\n  }, [pathName]);\r\n\r\n  const redirectTo = () => {\r\n    if (pathName != \"/login\") {\r\n      setRedirect(\"Sign Up\");\r\n      history.push(\"/login\");\r\n    } else {\r\n      setRedirect(\"Log In\");\r\n      history.push(\"/signup\");\r\n    }\r\n  };\r\n  // const pathname = window.location.pathname\r\n  // if (pathname === '/login') {\r\n  //   console.log(pathname)\r\n  //   setRedirect('on')\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.AppBar}>\r\n        <Toolbar>\r\n          <Grid container className={classes.spacing} spacing={0}>\r\n            <Grid item xs={4} className={classes.LogoGrid}>\r\n              <Typography variant=\"h6\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                  <span className={classes.fontColorForMentions}>mentions</span>\r\n                  <span className={classes.fontColorForCrawler}>crawler.</span>\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n\r\n            {getUser() ? (\r\n              <React.Fragment>\r\n                <Grid item xs={6} className={classes.SearchBarGrid}>\r\n                  <div className={classes.SeacrhBarDiv}>\r\n                    <DebounceInput\r\n                      element={TextField}\r\n                      debounceTimeout={300}\r\n                      className={classes.TextField}\r\n                      disableUnderline={true}\r\n                      onChange={handleSearchBar}\r\n                      value={keywords}\r\n                    />\r\n                    <SearchIcon className={classes.SearchIcon} />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={2} className={classes.NavIcons}>\r\n                  <Link to=\"/mentions/liked\">\r\n                    <IconButton color=\"inherit\">\r\n                      <FavoriteIcon />\r\n                    </IconButton>\r\n                  </Link>\r\n                  <Link to=\"/settings\">\r\n                    <IconButton color=\"inherit\">\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                  </Link>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Grid>\r\n                <Container className={classes.redirectContainer}>\r\n                  <Typography variant=\"h2\" className={classes.redirectText}>\r\n                    {redirect === \"Log In\"\r\n                      ? \"Already have an account?\"\r\n                      : \"Don't have an account?\"}\r\n                  </Typography>\r\n                  <Button\r\n                    className={classes.redirectButton}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={redirectTo}\r\n                  >\r\n                    <Typography variant=\"h3\">{redirect}</Typography>\r\n                  </Button>\r\n                </Container>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport const SearchTerm = React.createContext()\r\n","import React, { useState } from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { theme } from \"./themes/theme\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Login from \"./pages/Login\";\r\nimport Main from \"./pages/Main\";\r\nimport Settings from \"./pages/Settings\";\r\nimport LikedMentions from \"./pages/LikedMentions\";\r\nimport Header from \"./components/Header\";\r\nimport { eraseUser, getUser, redirectPath } from \"./utils/localStorage\";\r\nimport { loginInterceptor, AxiosInterceptor } from \"./utils/authAxios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { SearchTerm } from \"./utils/SearchContext\";\r\n// import \"fontsource-roboto\";\r\n\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [protectedRoutes, unhideProtectedRoutes] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  //adds an interceptor to check requests. If a request is sent with a 401, user is erased and send back to login\r\n  const unauthorized = () => {\r\n    eraseUser();\r\n    setOpen(true);\r\n    setErrorMessage(\"Logged out due to authorization failure\");\r\n    //user is erased, which should lead them back to login, they will not have access to routes if their localstorage is empty.Snackbar should also open up telling them what happened.\r\n    console.log(\"logging out due to authorization failure\");\r\n  };\r\n  const userLogin = () => {\r\n    unhideProtectedRoutes(\"unhide\");\r\n  };\r\n\r\n  const isAuthorized = () => {\r\n    if (getUser()) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n  //this interceptor catches 401s\r\n  AxiosInterceptor(unauthorized, isAuthorized);\r\n\r\n  //this interceptor stores user on storage, then unhides protected routes.\r\n  loginInterceptor(userLogin);\r\n\r\n  const pathName = window.location.pathname;\r\n  if (!isAuthorized() && pathName != \"/login\" && pathName != \"/signup\") {\r\n    redirectPath(pathName);\r\n  }\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <BrowserRouter>\r\n        <SearchTerm.Provider value={{ searchTerm, setSearchTerm }}>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            {/* routes should be inaccessible after here if token doesn't exist*/}\r\n            {isAuthorized() ? (\r\n              <Switch>\r\n                <Route exact path=\"/main/mentions/:idAndPlatform\" component={Main} />\r\n                <Route exact path=\"/main\" component={Main} />\r\n                <Route exact path=\"/settings\" component={Settings} />\r\n                <Route exact path=\"/mentions/liked\" component={LikedMentions} />\r\n                <Route path=\"/\" component={Main} />{\" \"}\r\n                {/* redirect to main if can't recognize path. Maybe add 404 page if there's time*/}\r\n              </Switch>\r\n            ) : (\r\n              <Redirect to=\"/signup\" />\r\n            )}\r\n            <Route render={() => <Redirect to=\"/login\" />} />\r\n          </Switch>\r\n        </SearchTerm.Provider>\r\n      </BrowserRouter>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        onClose={() => setOpen(false)}\r\n        autoHideDuration={6000}\r\n        open={open}\r\n        message={errorMessage}\r\n      />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","import axios from \"axios\";\r\nimport { storeUser, } from './localStorage'\r\n\r\nexport function AxiosInterceptor(unauth, isAuthorized) {\r\n  axios.interceptors.response.use((response) => {\r\n    return response\r\n  }, error => {\r\n    if (error.response.status === 401) {\r\n      unauth()\r\n      isAuthorized()\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n  );\r\n}\r\n\r\nexport function loginInterceptor(setProtectedRoutes) {\r\n  axios.interceptors.response.use((response) => {\r\n    if (response.data.user) {\r\n\r\n      storeUser(response.data.user)\r\n\r\n      setProtectedRoutes()\r\n    }\r\n    return response\r\n  }, (error) => {\r\n    const stringError = JSON.stringify(error)\r\n    if (stringError.includes('409')) return 'That email already exists'\r\n    if (stringError.includes('404')) return \"User doesn't exist\"\r\n    if (stringError.includes('403')) return 'Password does not match'\r\n  }\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}